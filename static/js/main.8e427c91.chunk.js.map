{"version":3,"sources":["components/Container.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container.js","redux/contacts/contacts-actions.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleAllInputChange","e","currentTarget","value","reset","className","preventDefault","trim","onChange","type","pattern","title","required","placeholder","ContactListItem","props","id","onDeleteContacts","onClick","ContactList","filter","map","Filter","Container","children","s","container","addContact","createAction","payload","uuidv4","deleteContact","handleFilterChange","connect","state","contacts","items","dispatch","formSubmitHandler","data","contactId","target","visibleContacts","normalizeFilter","toLowerCase","contact","includes","getVisibleContacts","itemsReducer","createReducer","some","alert","item","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e427c91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3YB13\",\"title\":\"Container_title__2gV2z\"};","import {useState } from 'react';\r\nimport PropTypes from \"prop-types\"\r\nimport \"./ContactForm.scss\";\r\n\r\nfunction ContactForm({onSubmit}) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleAllInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break;\r\n      case 'number':\r\n        setNumber(value)\r\n        break;\r\n      default: return\r\n    }\r\n  };\r\n\r\n  // функция записи новых абонентов в телефонную книгу\r\n  const handlePushContact = e => {\r\n    e.preventDefault();\r\n    if (name.trim() === '') return;\r\n\r\n    onSubmit({name, number});\r\n    reset()\r\n  };\r\n\r\n  const reset = () => {\r\n    setNumber('');\r\n    setName('');\r\n  }\r\n\r\n\r\n    return (\r\n      <div className=\"form__container\">\r\n        <form onSubmit={handlePushContact}>\r\n          <label className=\"label\">\r\n            Name\r\n            <input\r\n              className=\"input\"\r\n              value={name}\r\n              onChange={handleAllInputChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter Name\"\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Number\r\n            <input\r\n              className=\"input\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={handleAllInputChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter Number\"\r\n            />\r\n          </label>\r\n          <button className=\"add__button\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }","import PropTypes from 'prop-types'\r\n\r\nexport default function ContactListItem(props) {\r\n  const { name, number, id, onDeleteContacts } = props;\r\n  return (\r\n    <>\r\n      <span>{name}: </span>\r\n      <span>{number} </span>\r\n      <button\r\n        className=\"button__delete\"\r\n        type=\"button\"\r\n        onClick={() => onDeleteContacts(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    onDeleteContacts: PropTypes.func.isRequired,\r\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactList.scss\";\nimport ContactListItem from \"./ContactListItem\";\n\nconst ContactList = ({ filter, onDeleteContacts }) => {\n  return (\n    <ul className=\"Contact__list\">\n      {filter.map(({ id, name, number }) => {\n        return (\n          <li key={id} className=\"Contact__item\">\n            <ContactListItem\n              name={name}\n              number={number}\n              id={id}\n              onDeleteContacts={onDeleteContacts}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  filter: PropTypes.array.isRequired,\n  id: PropTypes.string,\n}","import PropTypes from 'prop-types'\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className=\"label\">\n      Find contacts by name\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Enter search name\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n}\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      {children}\n    </div>\n  );\n}\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\r\n  \"contact/addContact\",\r\n  ({ name, number }) => {\r\n    return {\r\n        payload: {\r\n            name,\r\n            number,\r\n            id: uuidv4()\r\n        },\r\n    };\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAction(\"contact/deleteContact\");\r\nexport const handleFilterChange = createAction(\"contact/filter\");\r\n","// import {useState, useEffect} from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport Container from \"./components/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, deleteContact, handleFilterChange } from \"./redux/contacts/contacts-actions\";\r\n\r\nfunction App({\r\n  contacts,\r\n  formSubmitHandler,\r\n  deleteContact,\r\n  filter,\r\n  handleFilterChange,\r\n}) {\r\n\r\n  // вынес фильтр в функцию\r\n  const getVisibleContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  return (\r\n    <Container>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChange={handleFilterChange} />\r\n      <ContactList filter={visibleContacts} onDeleteContacts={deleteContact} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    formSubmitHandler: (data) => dispatch(addContact(data)),\r\n    deleteContact: (contactId) => dispatch(deleteContact(contactId)),\r\n    handleFilterChange: (e) => dispatch(handleFilterChange(e.target.value)),\r\n  };\r\n};\r\n\r\n// export default App;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, handleFilterChange } from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [addContact]: (state, { payload }) => {\r\n        if (state.some((e) => e.name.includes(payload.name))) {\r\n        alert(`${payload.name} is already in contacts`);\r\n        return state;\r\n        }\r\n        return [payload, ...state];\r\n    },\r\n    [deleteContact]: (state, { payload }) => {\r\n        return state.filter((item) => item.id !== payload);\r\n    }\r\n})\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n    [handleFilterChange]: (state, { payload }) => {\r\n        return payload;\r\n    }\r\n})\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n})","import contactsReducer from \"./contacts/contacts-reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n  contacts: contactsReducer,\r\n},\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import reactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nreactDom.render(\r\n  <Provider store={store}>\r\n    <App />\r\n </Provider >\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}